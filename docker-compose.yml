services:
  teamtasks.micro.tasksapi:
    image: teamtasks.micro.tasksapi
    build:
      context: .
      dockerfile: TeamTasks.Micro.TasksAPI/Dockerfile
    ports:
      - 7002:7002
    depends_on:
      - redis
      - prometheus

  teamtasks.micro.identity:
    image: teamtasks.micro.identity
    build:
      context: .
      dockerfile: TeamTasks.Micro.Identity/Dockerfile
    ports:
      - 7210:7210
    depends_on:
      - redis
      - prometheus

  redis:
    image: redis:latest
    ports:
      - 6379:6379
    volumes:
      - redis-data:/data
  
  mongodb:
    image: mongo:latest
    container_name: mongodb
    ports:
      - 27017:27017
    volumes:
      - mongodb_data:/data/db
  
  elasticsearch:
    container_name: elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:7.9.2
    ports:
      - 9200:9200
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    environment:
      - xpack.monitoring.enabled=true
      - xpack.watcher.enabled=false
      - discovery.type=single-node
    networks:
      - elastic
    
  kibana:
    container_name: kibana
    image: docker.elastic.co/kibana/kibana:7.9.2
    ports:
      - 5601:5601
    depends_on:
      - elasticsearch
    environment:
      - ELASTICSEARCH_URL=http://localhost:9200
    networks:
      - elastic

  prometheus:
    image: prom/prometheus:latest
    restart: always
    ports:
      - 9090:9090
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
  
  grafana:
    image: grafana/grafana:latest
    restart: always
    depends_on:
      - prometheus
    ports:
      - 3000:3000
    volumes:
      - grafana-storage:/var/lib/grafana

networks:
  elastic:
    driver: bridge

volumes:
  grafana-storage:
  elasticsearch-data:
  redis-data:
  mongodb_data: